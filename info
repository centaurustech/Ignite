FundIT web application built for innnovate@HSBC's crowd funding initiative.


// =========================================================================
// 				Instructions On Running and Installing The Application 
// =========================================================================

1.  Install node.js - https://nodejs.org/
2.  Install bower   - http://bower.io/
3.  Install git     - https://git-scm.com/
4.  Retrieve the code from github. 'git clone https://github.com/alex-tang/Ignite'
5.  Change directory into the root of the project (Ignite)
6.  Run 'npm install' to install all dependencies for the node server
7.  Run 'bower install' to install all of the dependencies for the client side
8.  Ensure that the folder /data/db at root exists for mongod. 'mkdir -p /data/db'
9.  Run 'mongod' to start the mongodb daemon.
10. Run 'mongo', 'use ignite', 'load("mongo_scripts/initialize_db.js")' to initialize the database.
11. Run 'npm start' to run the application locally on port 3000.


// ==================================================================
//			 			Directory Structure 
// ==================================================================

Ignite/
- bower_components/		    > front end dependencies (angular, bootstrap, etc).
- node_modules/			    > node dependency modules
- public/					> static files served to the client
---- AdminViews/			
---- assets/
---- CreateProjectView/
---- GalleryView/
---- HomeView/				> Folder to hold all directives to be placed in index.html
---- LoadUser/				> Registration and log in for users that are not signed in with Single Sign On at HSBC
---- ProfileView/
---- ProjectView/			
---- Services/				> angular factories used in controllers for RESTful calls to the server
---- index.html 			> Home Page
---- indexCtrl.js			> Home Page Controller
- server/
---- db/					> user defined modules for mongodb operations and schemas
---- routes/					
------ api/					> routing for all api server calls 
- typings/					> typescript files for Visual Studio Code Intellisense
- app.js					> initialization code for express.js


** Each folder in public that ends in 'View' or 'Views' contains at least one html file and one corresponding controller.
** Each view is completely compartmentalized and can be used independently provided that they can retrieve data from the server.
** The webpage initially loads index.html and attempts to log the user in. After authentication, the user is redirected to GalleryView.


// ======================================================================
//							Admin Pages
// ======================================================================
There are two admin pages made in order for administrators set users as
budget owners and to start funding for project submissions.

/#/approveView
/#/usersView

Both pages require a password, verified at the server.
Password: 'admin'



// ==================================================================
//			 				Authentication
// ==================================================================
The application will use single sign on and not require authentication
when the user is logged in.

For testing purposes outside of the HSBC intranet, the application will
detect and allow users to register and create an account. The authentication
process for this can be found at:
http://mherman.org/blog/2015/01/31/local-authentication-with-passport-and-express-4/#.VYCZCxNViko

In both cases, the users will be logged in. Once logged in, all information
regarding the user can be found in the root scope at $root.user





// ==================================================================
//			 					Tests
// ==================================================================
Tests can be run found in the test folder at the root level. Currently
tests are written for server side model methods.

Run by typing in the command line:
	make test
	
	
	
// =================================================================
//							Backlog
// =================================================================
The backlog containing unfinished parts of the website, bugs, and features
can be found at:

	https://trello.com/b/kcBF0GHj/fundit-backlog
